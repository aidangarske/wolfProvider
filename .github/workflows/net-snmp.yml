name: Net-SNMP Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  #pull_request:
    #branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_wolfprovider:
    uses: ./.github/workflows/build-wolfprovider.yml
    with:
      wolfssl_ref: ${{ matrix.wolfssl_ref }}
      openssl_ref: ${{ matrix.openssl_ref }}
      fips_ref: ${{ matrix.fips_ref }}
      replace_default: ${{ matrix.replace_default }}
    secrets: inherit
    strategy:
      matrix:
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.2' ]
        fips_ref: [ 'FIPS', 'non-FIPS' ]
        replace_default: [ true ]

  test_net_snmp:
    runs-on: ubuntu-22.04
    container:
      image: debian:bookworm
      env:
        DEBIAN_FRONTEND: noninteractive
    needs: build_wolfprovider
    # This should be a safe limit for the tests to run.
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        net_snmp_ref: [ 'v5.9.3' ]
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.2' ]
        fips_ref: [ 'FIPS', 'non-FIPS' ]
        force_fail: [ 'WOLFPROV_FORCE_FAIL=1', '' ]
        replace_default: [ true ]
    env:
      WOLFSSL_PACKAGES_PATH: /tmp/wolfssl-packages
      OPENSSL_PACKAGES_PATH: /tmp/openssl-packages
      WOLFPROV_PACKAGES_PATH: /tmp/wolfprov-packages
    steps:
      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download packages from build job
        uses: actions/download-artifact@v4
        with:
          name: debian-packages-${{ matrix.fips_ref }}${{ matrix.replace_default && '-replace-default' || '' }}
          path: /tmp/packages

      - name: Setup package directories
        run: |
          mv /tmp/packages/wolfssl-packages ${{ env.WOLFSSL_PACKAGES_PATH }}
          mv /tmp/packages/openssl-packages ${{ env.OPENSSL_PACKAGES_PATH }}
          mv /tmp/packages/wolfprov-packages ${{ env.WOLFPROV_PACKAGES_PATH }}

      - name: Install wolfSSL/OpenSSL/wolfprov packages
        run: |
          printf "Installing OpenSSL/wolfProvider packages (${{ matrix.fips_ref }}):\n"
          ls -la ${{ env.WOLFSSL_PACKAGES_PATH }}
          ls -la ${{ env.OPENSSL_PACKAGES_PATH }}
          ls -la ${{ env.WOLFPROV_PACKAGES_PATH }}

          apt install --reinstall -y \
            ${{ env.WOLFSSL_PACKAGES_PATH }}/*.deb

          apt install --reinstall -y \
            ${{ env.OPENSSL_PACKAGES_PATH }}/openssl_*.deb \
            ${{ env.OPENSSL_PACKAGES_PATH }}/libssl3_*.deb \
            ${{ env.OPENSSL_PACKAGES_PATH }}/libssl-dev_*.deb

          apt install --reinstall -y \
            ${{ env.WOLFPROV_PACKAGES_PATH }}/*.deb

      - name: Verify wolfProvider is properly installed
        run: |
          $GITHUB_WORKSPACE/scripts/verify-install.sh \
            ${{ matrix.replace_default && '--replace-default' || '' }} \
            ${{ matrix.fips_ref == 'FIPS' && '--fips' || '' }}

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y libperl-dev build-essential autoconf \
            libtool pkg-config gettext net-tools

      - name: Build net-snmp with wolfProvider
        uses: wolfSSL/actions-build-autotools-project@v1
        with:
          repository: net-snmp/net-snmp
          ref: ${{ matrix.net_snmp_ref }}
          path: net-snmp
          configure: >-
            --disable-shared
            --with-default-snmp-version="3" --with-sys-contact="@@no.where"
            --with-sys-location="Unknown" --with-logfile="/var/log/snmpd.log"
            --with-persistent-directory="/var/net-snmp"
          check: false

      - name: Run tests
        working-directory: net-snmp
        shell: bash
        run: |
          set +o pipefail # ignore errors from make test
          export ${{ matrix.force_fail }}

          autoconf --version | grep -P '2\.\d\d' -o > dist/autoconf-version
          make -j test TESTOPTS="-e agentxperl" 2>&1 | tee net-snmp-test.log
          # Capture the test result using PIPESTATUS (Bash only)
          TEST_RESULT=${PIPESTATUS[0]}
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} net-snmp
