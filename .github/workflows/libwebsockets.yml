name: libwebsockets Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_wolfprovider:
    uses: ./.github/workflows/build-wolfprovider.yml
    with:
      wolfssl_ref: ${{ matrix.wolfssl_ref }}
      openssl_ref: ${{ matrix.openssl_ref }}
    strategy:
      matrix:
        # Test 5.8.2 since our .deb is based on that version
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.0' ]

  test_libwebsockets:
    runs-on: ubuntu-22.04
    needs: build_wolfprovider
    # This should be a safe limit for the tests to run.
    timeout-minutes: 20
    container:
      image: debian:bookworm
      env:
        DEBIAN_FRONTEND: noninteractive
    strategy:
      matrix:
        # Dont test master since it might be too unstable
        libwebsockets_ref: [ 'v4.3.3' ]
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.0' ]
        force_fail: [ 'WOLFPROV_FORCE_FAIL=1', '' ]
    steps:
      - name: Set up environment
        run: |
          apt-get update
          apt-get install -y git sudo build-essential autoconf automake \
            libtool pkg-config libjansson-dev check ca-certificates dpkg-dev

      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download wolfSSL packages
        uses: actions/download-artifact@v4
        with:
          name: wolfssl-debian-packages-${{ github.sha }}
          path: /tmp/wolfssl-artifacts

      - name: Download OpenSSL/wolfProvider packages
        uses: actions/download-artifact@v4
        with:
          name: openssl-wolfprov-debian-packages-${{ github.sha }}
          path: /tmp/openssl-wolfprov-artifacts

      - name: Install wolfSSL/OpenSSL/wolfprov packages
        run: |
          $GITHUB_WORKSPACE/.github/scripts/install-packages.sh

      - name: Install libwebsockets dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y libc6 libcap2 zlib1g cmake build-essential \
            openssl ca-certificates

      - name: Download libwebsockets
        uses: actions/checkout@v4
        with:
          repository: warmcat/libwebsockets
          ref: ${{ matrix.libwebsockets_ref }}
          path: libwebsockets

      - name: Build libwebsockets
        working-directory: libwebsockets
        run: |
          mkdir build
          cd build
          cmake ..
          make -j$(nproc)
          sudo make install

      - name: Run libwebsockets tests
        working-directory: libwebsockets
        run: |
          # wolfProvider is already loaded as the default provider
          echo "Current OpenSSL providers:"
          openssl list -providers
          openssl list -providers | grep -q "wolfSSL Provider" || (echo "ERROR: libwolfprov not found in OpenSSL providers" && exit 1)
          export ${{ matrix.force_fail }}
          if [ -n "${{ matrix.force_fail }}" ]; then
            set +e
          fi

          ./build/bin/libwebsockets-test-server --port=11111 --ssl > server.log 2>&1 & SERVER_PID=$!
          sleep 5
          timeout 10 ./build/bin/libwebsockets-test-client 127.0.0.1 --port=11111 --ssl > client.log 2>&1 || echo "Client exited with error $?"
          ldd ./build/bin/libwebsockets-test-server | grep wolfProvider
          ldd ./build/bin/libwebsockets-test-client | grep wolfProvider
          kill $SERVER_PID || echo "Server already exited"
          cat server.log || echo "Missing server.log"
          cat client.log || echo "Missing client.log"
          cat server.log client.log > libwebsockets-test.log
          if grep -q "error:03080006" libwebsockets-test.log || grep -q "Failed to create default vhost" libwebsockets-test.log; then
            TEST_RESULT=1
          else
            TEST_RESULT=0
          fi
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} libwebsockets
