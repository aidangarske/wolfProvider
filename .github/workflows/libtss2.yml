name: tpm2-tss Tests
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wolfprovider:
    uses: ./.github/workflows/build-wolfprovider.yml
    with:
      wolfssl_ref: ${{ matrix.wolfssl_ref }}
      openssl_ref: ${{ matrix.openssl_ref }}
    strategy:
      matrix:
        # Test 5.8.2 since our .deb is based on that version
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.0' ]

  test_tpm2_tss:
    runs-on: ubuntu-22.04
    needs: build_wolfprovider
    timeout-minutes: 30
    container:
      image: debian:bookworm
      env:
        DEBIAN_FRONTEND: noninteractive
    strategy:
      matrix:
        # Dont test master since it might be too unstable
        tpm2_tss_ref: [ '4.1.3' ]
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.0' ]
        force_fail: [ 'WOLFPROV_FORCE_FAIL=1', '' ]
    steps:
      - name: Set up environment
        run: |
          apt-get update
          apt-get install -y git sudo build-essential autoconf automake \
            libtool pkg-config libjansson-dev check ca-certificates dpkg-dev

      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
     
      - name: Download wolfSSL packages
        uses: actions/download-artifact@v4
        with:
          name: wolfssl-debian-packages-${{ github.sha }}
          path: /tmp/wolfssl-artifacts

      - name: Download OpenSSL/wolfProvider packages
        uses: actions/download-artifact@v4
        with:
          name: openssl-wolfprov-debian-packages-${{ github.sha }}
          path: /tmp/openssl-wolfprov-artifacts

      - name: Install wolfSSL/OpenSSL/wolfprov packages
        run: |
          $GITHUB_WORKSPACE/.github/scripts/install-packages.sh

      # Replace system openssl with our version
      - name: Setup OpenSSL
        run: |
          OPENSSL_SYSTEM=$(which openssl)
          sudo rm ${OPENSSL_SYSTEM}
          sudo ln -s $GITHUB_WORKSPACE/openssl-install/bin/openssl ${OPENSSL_SYSTEM}

      - name: Install test dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libcunit1-dev autoconf-archive \
            gettext libcmocka-dev build-essential autoconf automake libtool \
            libjson-c-dev libcurl4-openssl-dev acl libusb-1.0-0-dev uuid-dev

      - name: Checkout tpm2-tss
        uses: actions/checkout@v4
        with:
          repository: tpm2-software/tpm2-tss
          path: tpm2_tss_repo
          ref: ${{ matrix.tpm2_tss_ref }}
          fetch-depth: 1

      # Apply patch to fix missing stdint.h includes in test files
      - name: Apply patch for test source files
        working-directory: tpm2_tss_repo
        if: ${{ matrix.tpm2_tss_ref }} == '4.1.3'
        run: |
          perl -pi -e 's|(#include <cmocka\.h>)|#include <stdint.h>\n$1|' ./test/unit/*.c

      - name: Build and install tpm2-tss
        working-directory: tpm2_tss_repo
        run: |
          ./bootstrap
          ./configure --prefix=$PWD/tpm2-tss-install --with-crypto=ossl \
            --enable-unit
          make -j$(nproc)
          make install

      - name: Run tpm2-tss tests
        working-directory: tpm2_tss_repo
        run: |
          # wolfProvider is already loaded as the default provider
          echo "Current OpenSSL providers:"
          openssl list -providers
          openssl list -providers | grep -q "wolfSSL Provider" || (echo "ERROR: libwolfprov not found in OpenSSL providers" && exit 1)
          export ${{ matrix.force_fail }}
          make check 2>&1 || true
          if $(grep -q "FAIL: test/unit" test-suite.log); then
            TEST_RESULT=1
            echo "Expected zero failures"
          else
            TEST_RESULT=0
          fi
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} tpm2-tss
