name: cjose Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'build-wolfprov-debian-test', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  test_cjose:
    runs-on: ubuntu-22.04
    container:
      image: debian:bookworm
      env:
        DEBIAN_FRONTEND: noninteractive
    timeout-minutes: 20
    strategy:
      matrix:
        cjose_ref: [ 'v0.6.2.1' ]
        fips_ref: [ 'FIPS', 'non-FIPS' ]
        replace_default: [ true ]
        force_fail: [ 'WOLFPROV_FORCE_FAIL=1', '' ]

    env:
      WOLFSSL_PACKAGES_PATH: /tmp/wolfssl-packages
      OPENSSL_PACKAGES_PATH: /tmp/openssl-packages
      WOLFPROV_PACKAGES_PATH: /tmp/wolfprov-packages

    steps:
      - name: Install cjose dependencies
        run: |
          apt-get update
          apt-get install -y git build-essential autoconf automake \
            libtool pkg-config libjansson-dev check ca-certificates dpkg-dev

      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download wolfProvider packages from nightly build
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build-wolfprovider-nightly.yml
          branch: main
          name: debian-packages-${{ matrix.fips_ref }}${{ matrix.replace_default && '-replace-default' || '' }}
          path: /tmp/packages

      - name: Setup package directories
        run: |
          mv /tmp/packages/wolfssl-packages ${{ env.WOLFSSL_PACKAGES_PATH }}
          mv /tmp/packages/openssl-packages ${{ env.OPENSSL_PACKAGES_PATH }}
          mv /tmp/packages/wolfprov-packages ${{ env.WOLFPROV_PACKAGES_PATH }}

          echo "Packages ready:"
          ls -la ${{ env.WOLFSSL_PACKAGES_PATH }}
          ls -la ${{ env.OPENSSL_PACKAGES_PATH }}
          ls -la ${{ env.WOLFPROV_PACKAGES_PATH }}

      - name: Install wolfSSL/OpenSSL/wolfProvider packages
        run: |
          printf "Installing OpenSSL/wolfProvider packages (${{ matrix.fips_ref }}):\n"
          ls -la ${{ env.WOLFSSL_PACKAGES_PATH }}
          ls -la ${{ env.OPENSSL_PACKAGES_PATH }}
          ls -la ${{ env.WOLFPROV_PACKAGES_PATH }}

          # Install wolfSSL packages
          apt install --reinstall -y \
            ${{ env.WOLFSSL_PACKAGES_PATH }}/*.deb

          # Install OpenSSL packages
          apt install --reinstall -y \
            ${{ env.OPENSSL_PACKAGES_PATH }}/openssl_*.deb \
            ${{ env.OPENSSL_PACKAGES_PATH }}/libssl3_*.deb \
            ${{ env.OPENSSL_PACKAGES_PATH }}/libssl-dev_*.deb

          # Install wolfProvider packages
          apt install --reinstall -y \
            ${{ env.WOLFPROV_PACKAGES_PATH }}/*.deb

      - name: Verify wolfProvider is properly installed
        run: |
          $GITHUB_WORKSPACE/scripts/verify-install.sh \
            ${{ matrix.replace_default && '--replace-default' || '' }} \
            ${{ matrix.fips_ref == 'FIPS' && '--fips' || '' }}

      - name: Download cjose
        uses: actions/checkout@v4
        with:
          repository: OpenIDC/cjose
          ref: ${{ matrix.cjose_ref }}
          path: cjose
          fetch-depth: 1

      - name: Build cjose
        working-directory: cjose
        run: |
          ./configure CFLAGS="-Wno-error=deprecated-declarations"

          # Build cjose
          make

      - name: Run cjose tests
        working-directory: cjose
        run: |
          export ${{ matrix.force_fail }}

          make test 2>&1 | tee cjose-test.log
          TEST_RESULT=$(grep -q "FAIL: check_cjose" cjose-test.log && echo "1" || echo "0")
          echo "TEST_RESULT = $TEST_RESULT"
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} cjose
