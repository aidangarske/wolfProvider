name: Curl Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_wolfprovider:
    name: Build wolfProvider
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    strategy:
      matrix:
        wolfssl_ref: [ 'master', 'v5.7.4-stable' ]
        force_fail: ['', 'WOLFPROV_FORCE_FAIL=1']
    steps:
      - name: Checkout wolfProvider
        uses: actions/checkout@v4

      - name: Checking wolfSSL/wolfProvider in cache
        uses: actions/cache@v4
        id: wolfprov-cache
        with:
          path: |
            wolfssl-source
            wolfssl-install
            wolfprov-install
            provider.conf
          key: wolfprov-${{ matrix.wolfssl_ref }}-${{ github.sha }}
          lookup-only: true

      - name: Checking OpenSSL in cache
        if: steps.wolfprov-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        id: openssl-cache
        with:
          path: |
            openssl-source
            openssl-install
          key: ossl-depends

      - name: Build wolfProvider
        if: steps.wolfprov-cache.outputs.cache-hit != 'true'
        run: |
          WOLFSSL_TAG=${{ matrix.wolfssl_ref }} ${{ matrix.force_fail }} ./scripts/build-wolfprovider.sh || BUILD_RESULT=$?

          if [ -n "${{ matrix.force_fail }}" ]; then
            if [ $BUILD_RESULT -eq 0 ]; then
              echo "Build unexpectedly succeeded with force fail enabled"
              exit 1
            else
              echo "Build failed as expected with force fail enabled"
            fi
          elif [ $BUILD_RESULT -ne 0 ]; then
            echo "Build failed unexpectedly"
            exit 1
          fi

      - name: Print errors
        if: ${{ failure() }}
        run: |
          if [ -f test-suite.log ] ; then
            cat test-suite.log
          fi

  test_curl:
    runs-on: ubuntu-22.04
    needs: build_wolfprovider
    timeout-minutes: 20
    strategy:
      matrix:
        curl_ref: [ 'master', 'curl-8_4_0' ]
        wolfssl_ref: [ 'master', 'v5.7.4-stable' ]
        force_fail: ['', 'WOLFPROV_FORCE_FAIL=1']
    steps:
      - name: Retrieving OpenSSL from cache
        uses: actions/cache/restore@v4
        id: openssl-cache
        with:
          path: |
            openssl-source
            openssl-install
          key: ossl-depends
          fail-on-cache-miss: true

      - name: Retrieving wolfSSL/wolfProvider from cache
        uses: actions/cache/restore@v4
        id: wolfprov-cache
        with:
          path: |
            wolfssl-source
            wolfssl-install
            wolfprov-install
            provider.conf
          key: wolfprov-${{ matrix.wolfssl_ref }}-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Install curl test dependencies
        run: |
          sudo apt-get update
          sudo apt-get install nghttp2 libpsl5 libpsl-dev python3-impacket

      - name: Build curl
        uses: wolfSSL/actions-build-autotools-project@v1
        with:
          repository: curl/curl
          path: curl
          ref: ${{ matrix.curl_ref }}
          configure: --with-openssl=$GITHUB_WORKSPACE/openssl-install/
          check: false

      - name: Test curl with wolfProvider
        working-directory: curl
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/wolfssl-install/lib:$GITHUB_WORKSPACE/openssl-install/lib64
          export OPENSSL_CONF=$GITHUB_WORKSPACE/provider.conf
          export OPENSSL_MODULES=$GITHUB_WORKSPACE/wolfprov-install/lib

          make -j $(nproc) test-ci || TEST_RESULT=$?

          if [ -n "${{ matrix.force_fail }}" ]; then
            if [ $TEST_RESULT -eq 0 ]; then
              echo "Tests unexpectedly succeeded with force fail enabled"
              exit 1
            else
              echo "Tests failed as expected with force fail enabled"
            fi
          elif [ $TEST_RESULT -ne 0 ]; then
            echo "Tests failed unexpectedly"
            exit 1
          fi
