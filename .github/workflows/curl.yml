name: Curl Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_matrix:
    uses: ./.github/workflows/build-matrix.yml
    with:
      template_path: .github/matrix/curl-matrix.yml

  build_wolfprovider:
    needs: build_matrix
    uses: ./.github/workflows/build-wolfprovider.yml
    with:
      wolfssl_ref: ${{ matrix.wolfssl_ref }}
      openssl_ref: ${{ matrix.openssl_ref }}
    strategy:
      matrix: ${{ fromJSON(needs.build_matrix.outputs.matrix) }}

  test_curl:
    runs-on: ubuntu-22.04
    needs: 
      - build_matrix
      - build_wolfprovider
    # This should be a safe limit for the tests to run.
    timeout-minutes: 20
    strategy:
      matrix:
        <<: ${{ fromJSON(needs.build_matrix.outputs.matrix) }}
        exclude:
          - curl_ref: "master"
            force_fail: "WOLFPROV_FORCE_FAIL=1"
    steps:
      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Retrieving wolfSSL/wolfProvider from cache
        uses: actions/cache/restore@v4
        id: wolfprov-cache
        with:
          path: |
            wolfssl-install
            wolfprov-install
            openssl-install/lib64
            openssl-install/include
            openssl-install/bin

          key: wolfprov-${{ matrix.wolfssl_ref }}-${{ matrix.openssl_ref }}-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install nghttp2 libpsl5 libpsl-dev python3-impacket

      - name: Build curl
        uses: wolfSSL/actions-build-autotools-project@v1
        with:
          repository: curl/curl
          path: curl
          ref: ${{ matrix.curl_ref }}
          configure: --with-openssl
          check: false

      - name: Generate certificates for curl master force-fail tests
        run: |
          if [ "${{ matrix.force_fail }}" = "WOLFPROV_FORCE_FAIL=1" ] &&
             [ "${{ matrix.curl_ref }}" = "master" ]; then
            cd curl/tests/certs
            make test-ca.cacert
            cd ../..
          fi
      - name: Test curl with wolfProvider
        working-directory: curl
        run: |
          # Set up the environment for wolfProvider
          source $GITHUB_WORKSPACE/scripts/env-setup
          export ${{ matrix.force_fail }}
          export CURL_REF=${{ matrix.curl_ref }}

          # Run tests and save output to test.log
          make -j$(nproc) test-ci 2>&1 | tee curl-test.log
          # Capture the test result using PIPESTATUS (Bash only)
          TEST_RESULT=${PIPESTATUS[0]}
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} curl
