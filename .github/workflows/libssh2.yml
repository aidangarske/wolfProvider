name: libssh2 Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_wolfprovider:
    uses: ./.github/workflows/build-wolfprovider.yml
    with:
      wolfssl_ref: ${{ matrix.wolfssl_ref }}
      openssl_ref: ${{ matrix.openssl_ref }}
    strategy:
      matrix:
        # Test 5.8.2 since our .deb is based on that version
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.0' ]

  test_libssh2:
    runs-on: ubuntu-22.04
    needs: build_wolfprovider
    timeout-minutes: 20
    container:
      image: debian:bookworm
      env:
        DEBIAN_FRONTEND: noninteractive
    strategy:
      matrix:
        # Dont test master since it might be too unstable
        libssh2_ref: [ 'libssh2-1.10.0' ]
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.0' ]
        force_fail: ['WOLFPROV_FORCE_FAIL=1', '']
    steps:
      - name: Set up environment
        run: |
          apt-get update
          apt-get install -y git sudo build-essential autoconf automake \
            libtool pkg-config libjansson-dev check ca-certificates dpkg-dev

      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download wolfSSL packages
        uses: actions/download-artifact@v4
        with:
          name: wolfssl-debian-packages-${{ github.sha }}
          path: /tmp/wolfssl-artifacts

      - name: Download OpenSSL/wolfProvider packages
        uses: actions/download-artifact@v4
        with:
          name: openssl-wolfprov-debian-packages-${{ github.sha }}
          path: /tmp/openssl-wolfprov-artifacts

      - name: Install wolfSSL/OpenSSL/wolfprov packages
        run: |
          $GITHUB_WORKSPACE/.github/scripts/install-packages.sh

      - name: Install dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y clang libc++-dev python3-impacket \
            openssh-client openssh-server

      - name: Download libssh2
        uses: actions/checkout@v4
        with:
          repository: libssh2/libssh2
          ref: ${{ matrix.libssh2_ref }}
          path: libssh2
          fetch-depth: 1

      - name: Checkout OSP
        uses: actions/checkout@v4
        with:
          repository: wolfssl/osp
          path: osp
          fetch-depth: 1
      - run: |
          cd libssh2
          patch -p1 < $GITHUB_WORKSPACE/osp/wolfProvider/libssh2/${{ matrix.libssh2_ref }}-wolfprov.patch

      - name: Build libssh2
        working-directory: libssh2
        run: |
          autoreconf -fi
          ./configure --with-crypto=openssl
          make -j$(nproc)

      - name: Setup SSH server for tests
        run: |
          # Generate SSH host keys
          ssh-keygen -A
          # Start SSH server in background
          /usr/sbin/sshd -D &
          # Wait a moment for server to start
          sleep 2
          # Verify SSH server is running
          ps aux | grep sshd || echo "SSH server not running"

      - name: Run libssh2 tests
        working-directory: libssh2
        shell: bash
        run: |
          # wolfProvider is already loaded as the default provider
          echo "Current OpenSSL providers:"
          openssl list -providers
          openssl list -providers | grep -q "wolfSSL Provider" || (echo "ERROR: libwolfprov not found in OpenSSL providers" && exit 1)
          export ${{ matrix.force_fail }}
          if [ -n "${{ matrix.force_fail }}" ]; then
            set +e
          fi

          # Run the tests and capture the result
          make check 2>&1 | tee libssh2-test.log
          cat tests/test-suite.log
          TEST_RESULT=$(grep -q "FAIL: ssh2.sh" libssh2-test.log && echo "1" || echo "0")
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} libssh2
